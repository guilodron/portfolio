{"version":3,"file":"static/js/570.b20b5364.chunk.js","mappings":"uQA4DA,EAvDa,SAAC,GAAsB,IAArBA,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAEdC,GAASC,EAAAA,EAAAA,GAAEC,EAAAA,GACXC,GAAiBF,EAAAA,EAAAA,GAAEG,EAAAA,IAEzB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,MACAC,EAAAA,EAAAA,YAAU,WACRD,GAAS,KACR,IAEH,IAAME,GAAaC,EAAAA,EAAAA,WAAU,CACzBC,OAAQP,EAAU,EAAI,EACtBQ,MAAiB,SAAVf,EAAmB,OAAS,UAG/BgB,GAAOH,EAAAA,EAAAA,WAAU,CACvBI,IAAKR,EAAQ,GAAK,GAClBS,MAAOT,EAAQ,EAAI,GACnBU,OAAQ,CAENC,QAAS,MAKb,OACI,UAAChB,EAAD,CACEiB,SAAU,CAAC,GAAG,EAAE,GAChBC,KAAM,CAAC,GAAG,GAAG,IACb,aAAYN,EAAKC,IAEjBM,IAAKxB,EACLyB,eAAgB,WACZhB,GAAW,IAEfiB,eAAgB,WACZjB,GAAW,IAVjB,WAaE,SAACP,EAAD,CACEyB,OAAO,WACPX,MAAOH,EAAWG,MAClBY,UAAW,EACXC,UAAW,GACXd,OAAQ,GACRe,MAAO,IACPC,aAAW,KAEb,sBAAWT,SAAU,CAAC,GAAI,EAAG,IAAKU,UAAW,MAC7C,sBAAWC,YAAU,EAACX,SAAU,EAAE,GAAI,EAAG,IAAKU,UAAW,SCzBnE,EAxBc,WAEV,IAAME,GAASC,EAAAA,EAAAA,UACRC,GAAeC,EAAAA,EAAAA,MAAfD,YACAE,GAAQC,EAAAA,EAAAA,MAARD,KAUT,OAREE,EAAAA,EAAAA,KAAS,SAACC,GACN,IAAMC,EAAID,EAAME,MAAMC,iBAAiB,EACvCV,EAAOW,QAAQvB,SAASwB,GAAK,EAAIC,KAAKC,IAAIN,EAAI,MAAM,EACpDR,EAAOW,QAAQI,SAASC,GAAKd,EAAYU,EAAE,EAC3CZ,EAAOW,QAAQI,SAASH,EAAUV,EAAYc,EAAE,EAAnB,OAK/B,+BACE,SAAC,EAAD,CACIlD,QAASkC,EACTjC,MAAOqC,OCKnB,EAtBoB,WAClB,IAAMa,GAAgBC,EAAAA,EAAAA,GAAiBC,EAAAA,GAAeC,EAAAA,IAEtD,OACE,SAAC,KAAD,CACEC,MAAO,CACLC,OAAQ,QACRC,MAAO,QACPnC,SAAU,WACVoC,IAAK,EACLC,MAAO,EACPC,QAAS,GAEXC,OAAQ,CAAEvC,SAAU,CAAC,EAAG,EAAG,KAT7B,UAWE,SAAC6B,EAAD,WACE,SAAC,EAAD","sources":["components/Blob/index.js","components/Scene/index.js","components/CoisasThree/index.js"],"sourcesContent":["import { MeshWobbleMaterial, Sphere } from \"@react-three/drei\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport {a, useSpring} from '@react-spring/three'\r\n\r\nconst Blob = ({blobRef, theme}) => {\r\n\r\n    const Wobble = a(MeshWobbleMaterial)\r\n    const AnimatedSphere = a(Sphere)\r\n\r\n    const [hovered, setHovered] = useState(false)\r\n    const [ready, setReady] = useState(false)\r\n    useEffect(() => {\r\n      setReady(true)\r\n    }, [])\r\n\r\n    const animations = useSpring({\r\n        factor: hovered ? 1 : 0,\r\n        color: theme === 'dark' ? 'blue' : 'white',\r\n      })\r\n      \r\n      const slow = useSpring({\r\n      pos: ready ? 15 : 30,\r\n      scale: ready ? 1 : .3,\r\n      config: {\r\n        // duration: 1000,\r\n        tension: 30,\r\n        \r\n      }\r\n    })\r\n\r\n    return (\r\n        <AnimatedSphere\r\n          position={[15,0,0]} \r\n          args={[15,20,16]}\r\n          position-x={slow.pos}\r\n          // scale={slow.scale}\r\n          ref={blobRef}\r\n          onPointerEnter={() => {\r\n              setHovered(true)\r\n          }}\r\n          onPointerLeave={() => {\r\n              setHovered(false)\r\n          }}\r\n        >\r\n          <Wobble\r\n            attach='material'\r\n            color={animations.color}\r\n            metalness={1}\r\n            roughness={.30}\r\n            factor={.2}\r\n            speed={1.5}\r\n            clipShadows    \r\n          />\r\n          <spotLight position={[20, 0, 42]} intensity={.6} />\r\n          <spotLight castShadow position={[-20, 0, 40]} intensity={.6} />\r\n        </AnimatedSphere>\r\n    );\r\n  };\r\n\r\nexport default Blob;","import { useFrame } from '@react-three/fiber';\r\nimport React, { useRef } from 'react';\r\nimport Blob from '../Blob';\r\nimport { useCursor } from '../../providers/useCursor';\r\nimport { useTheme } from '../../providers/useTheme';\r\n\r\nconst Scene = () => {\r\n\r\n    const sphere = useRef()\r\n    const {coordinates} = useCursor()\r\n    const {tema} = useTheme()\r\n\r\n    useFrame((state) => {\r\n        const t = state.clock.getElapsedTime()/2\r\n        sphere.current.position.y = (1 + Math.sin(t / 1.5))/2\r\n        sphere.current.rotation.x = -coordinates.y/5\r\n        sphere.current.rotation.y = -.8 + coordinates.x/2\r\n    })\r\n\r\n\r\n  return (\r\n      <>\r\n        <Blob \r\n            blobRef={sphere}\r\n            theme={tema}\r\n        />\r\n      </>\r\n  )\r\n};\r\n\r\nexport default Scene;\r\n","import { useContextBridge } from \"@react-three/drei\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport React from \"react\";\r\nimport { CursorContext } from \"../../providers/useCursor\";\r\nimport { ThemeContext } from \"../../providers/useTheme\";\r\nimport Scene from \"../Scene\";\r\n\r\nconst CoisasThree = () => {\r\n  const ContextBridge = useContextBridge(CursorContext, ThemeContext);\r\n\r\n  return (\r\n    <Canvas\r\n      style={{\r\n        height: \"120vh\",\r\n        width: \"100vw\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        right: 0,\r\n        zIndex: -1,\r\n      }}\r\n      camera={{ position: [0, 0, 24] }}\r\n    >\r\n      <ContextBridge>\r\n        <Scene />\r\n      </ContextBridge>\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default CoisasThree;\r\n"],"names":["blobRef","theme","Wobble","a","MeshWobbleMaterial","AnimatedSphere","Sphere","useState","hovered","setHovered","ready","setReady","useEffect","animations","useSpring","factor","color","slow","pos","scale","config","tension","position","args","ref","onPointerEnter","onPointerLeave","attach","metalness","roughness","speed","clipShadows","intensity","castShadow","sphere","useRef","coordinates","useCursor","tema","useTheme","useFrame","state","t","clock","getElapsedTime","current","y","Math","sin","rotation","x","ContextBridge","useContextBridge","CursorContext","ThemeContext","style","height","width","top","right","zIndex","camera"],"sourceRoot":""}